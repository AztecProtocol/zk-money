#!/bin/bash
set -e

if [ ! -d ./terraform ]; then
   echo "No terraform found."
   exit 0
fi

REPOSITORY=$1
IMAGE_COMMIT_URI=$ECR_URL/$REPOSITORY:cache-$CIRCLE_SHA1

# Pull the built image, do nothing if this wasn't rebuilt.
docker pull $IMAGE_COMMIT_URI > /dev/null 2>&1 || { echo "No new image found." && exit 0; }
TEMP_CONTAINER=$(docker create $IMAGE_COMMIT_URI)

docker cp $TEMP_CONTAINER:/usr/src/$REPOSITORY/dist $REPOSITORY
docker rm -v $TEMP_CONTAINER

# Apply terraform.
deploy_terraform

cd terraform
AWS_BUCKET_NAME=$(terraform output s3)
AWS_CLOUDFRONT_DISTRIBUTION=$(terraform output cloudfront)
cd ..

aws s3 rm s3://$AWS_BUCKET_NAME --recursive
aws s3 cp $REPOSITORY s3://$AWS_BUCKET_NAME --recursive --metadata-directive REPLACE --cache-control "max-age=3600" --acl public-read
aws s3 cp \
       s3://$AWS_BUCKET_NAME \
       s3://$AWS_BUCKET_NAME \
       --exclude '*' \
       --include '*.js' \
       --no-guess-mime-type \
       --content-type="application/javascript; charset=utf-8" \
       --metadata-directive="REPLACE" \
       --recursive
aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION --paths "/*"

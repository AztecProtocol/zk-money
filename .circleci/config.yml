setup_env: &setup_env
  run:
    name: 'Setup environment'
    command: .circleci/setup_env << pipeline.parameters.rebuild >>

version: 2.1
parameters:
  rebuild:
    type: boolean
    default: false
jobs:
  x86_64-linux-gcc:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-x86_64-linux-gcc ./dockerfiles/Dockerfile.x86_64-linux-gcc

  x86_64-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-x86_64-linux-clang ./dockerfiles/Dockerfile.x86_64-linux-clang

  x86_64-linux-clang-assert:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-x86_64-linux-clang-assert ./dockerfiles/Dockerfile.x86_64-linux-clang-assert

  barretenberg-tests:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: barretenberg/scripts
          command: ./cond_spot_run_tests bb-tests $CIRCLE_SHA1

  stdlib-primitives-tests:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: barretenberg/scripts
          command: ./cond_spot_run_tests stdlib_primitives_tests $CIRCLE_SHA1 1

  stdlib-recursion-tests:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: barretenberg/scripts
          command: ./cond_spot_run_tests stdlib_recursion_tests $CIRCLE_SHA1 1

  tx-rollup-tests:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: barretenberg/scripts
          command: ./cond_spot_run_tests rollup_proofs_tx_rollup_tests $CIRCLE_SHA1

  root-rollup-tests:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: barretenberg/scripts
          command: ./cond_spot_run_tests rollup_proofs_root_rollup_tests $CIRCLE_SHA1

  root-verifier-tests:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: barretenberg/scripts
          command: ./cond_spot_run_tests rollup_proofs_root_verifier_tests $CIRCLE_SHA1 1

  wasm-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-wasm-linux-clang ./dockerfiles/Dockerfile.wasm-linux-clang

  barretenberg-js:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg.js
          command: build barretenberg.js

  blockchain:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: blockchain
          command: build blockchain

  halloumi:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: halloumi
          command: build halloumi

  falafel:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: falafel
          command: build falafel

  wasabi:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: wasabi
          command: build wasabi

  sdk:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build and test'
          working_directory: sdk
          command: build sdk

  hummus:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build and test'
          working_directory: hummus
          command: build hummus

  block-explorer:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build and test'
          working_directory: block-explorer
          command: build block-explorer

  documentation:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build and test'
          working_directory: documentation
          command: build documentation

  end-to-end:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build'
          working_directory: end-to-end
          command: build end-to-end

  e2e-payment:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: end-to-end/scripts
          command: ./cond_spot_run_tests payment-test ./src/e2e.test.ts

  e2e-account:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: end-to-end/scripts
          command: ./cond_spot_run_tests account-test ./src/e2e_account.test.ts

  e2e-defi:
    docker:
      - image: aztecprotocol/build-image
    resource_class: small
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Test'
          working_directory: end-to-end/scripts
          command: ./cond_spot_run_tests defi-test ./src/e2e_defi.test.ts

  zk-money:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build and test'
          working_directory: zk-money
          command: build zk-money

  website:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build and test'
          working_directory: website
          command: build website

  metrics:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build coinbase-exporter'
          working_directory: metrics/coinbase-exporter
          command: build coinbase-exporter
      - run:
          name: 'Build sidecar'
          working_directory: metrics/sidecar
          command: build metrics-sidecar
      - run:
          name: 'Build prometheus'
          working_directory: metrics/prometheus
          command: build prometheus
      - run:
          name: 'Build grafana'
          working_directory: metrics/grafana
          command: build grafana

  deploy:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'barretenberg-x86_64-linux-gcc'
          working_directory: barretenberg
          command: deploy_ecr barretenberg-x86_64-linux-gcc
      - run:
          name: 'barretenberg-x86_64-linux-clang'
          working_directory: barretenberg
          command: deploy_ecr barretenberg-x86_64-linux-clang
      - run:
          name: 'barretenberg-wasm-linux-clang'
          working_directory: barretenberg
          command: deploy_ecr barretenberg-wasm-linux-clang
      - run:
          name: 'barretenberg.js'
          working_directory: barretenberg.js
          command: deploy_ecr barretenberg.js
      - run:
          name: 'blockchain'
          working_directory: blockchain
          command: |
            deploy_ecr blockchain
            COMMIT=$(last_successful_deploy_commit)
            if [ -z "$COMMIT" -o changed $COMMIT '.*\.sol$' ]; then
              `docker run --env ESCAPE_BLOCK_LOWER=60 --env ESCAPE_BLOCK_UPPER=120 --env INFURA_API_KEY=$TF_VAR_INFURA_API_KEY --env PRIVATE_KEY=$TF_VAR_PRIVATE_KEY --env NETWORK=goerli 278380418400.dkr.ecr.eu-west-2.amazonaws.com/blockchain:latest`
              export TF_VAR_ROLLUP_CONTRACT_ADDRESS=$ROLLUP_CONTRACT_ADDRESS
              export TF_VAR_PRICE_FEED_CONTRACT_ADDRESSES=$PRICE_FEED_CONTRACT_ADDRESSES
              deploy_terraform
            fi
      - run:
          name: 'sdk'
          working_directory: sdk
          command: deploy_ecr sdk
      - run:
          name: 'halloumi'
          working_directory: halloumi
          command: deploy halloumi
      - run:
          name: 'falafel'
          working_directory: falafel
          command: deploy falafel
      - run:
          name: 'wasabi'
          working_directory: wasabi
          command: deploy wasabi
      - run:
          name: 'hummus'
          working_directory: hummus
          command: |
            deploy_ecr hummus
            deploy_s3 hummus
      - run:
          name: 'block-explorer'
          working_directory: block-explorer
          command: |
            deploy_ecr block-explorer
            deploy_s3 block-explorer
      - run:
          name: 'documentation'
          working_directory: documentation
          command: |
            deploy_ecr documentation
            deploy_s3 documentation
      - run:
          name: 'website'
          working_directory: website
          command: |
            deploy_ecr website
            deploy_s3 website
      - run:
          name: 'zk-money'
          working_directory: zk-money
          command: |
            deploy_ecr zk-money
            deploy_s3 zk-money
      - run:
          name: 'metrics'
          working_directory: metrics
          command: |
            cd coinbase-exporter && deploy coinbase-exporter && cd ..
            cd ecs-exporter && deploy_terraform && cd ..
            cd sidecar && deploy metrics-sidecar && cd ..
            cd prometheus && deploy prometheus && cd ..
            cd grafana && deploy grafana && cd ..

  deploy-prod:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'barretenberg.js'
          working_directory: barretenberg.js
          command: |
            deploy_ecr barretenberg.js
            deploy_npm barretenberg.js
      - run:
          name: 'blockchain'
          working_directory: blockchain
          command: |
            deploy_ecr blockchain
            deploy_npm blockchain
      - run:
          name: 'sdk'
          working_directory: sdk
          command: |
            deploy_ecr sdk
            deploy_npm sdk
      - run:
          name: 'halloumi'
          working_directory: halloumi
          command: deploy halloumi halloumi-mainnet ./terraform/mainnet
      - run:
          name: 'falafel'
          working_directory: falafel
          command: |
            deploy falafel falafel-mainnet ./terraform/mainnet
            deploy_dockerhub falafel
      - run:
          name: 'zk-money'
          working_directory: zk-money
          command: |
            deploy_ecr zk-money
            deploy_s3 zk-money ./terraform/mainnet

tag_filter: &tag_filter
  tags:
    only: /v[0-9]+(\.[0-9]+)*/

workflows:
  build:
    jobs:
      - x86_64-linux-gcc:
          filters: *tag_filter
      - x86_64-linux-clang:
          filters: *tag_filter
      - x86_64-linux-clang-assert:
          filters: *tag_filter
      - wasm-linux-clang:
          filters: *tag_filter
      - barretenberg-tests:
          requires:
            - x86_64-linux-clang-assert
          filters: *tag_filter
      - stdlib-primitives-tests:
          requires:
            - x86_64-linux-clang-assert
          filters: *tag_filter
      - stdlib-recursion-tests:
          requires:
            - x86_64-linux-clang-assert
          filters: *tag_filter
      - tx-rollup-tests:
          requires:
            - x86_64-linux-clang-assert
          filters: *tag_filter
      - root-rollup-tests:
          requires:
            - x86_64-linux-clang-assert
          filters: *tag_filter
      - root-verifier-tests:
          requires:
            - x86_64-linux-clang-assert
          filters: *tag_filter
      - barretenberg-js:
          requires:
            - wasm-linux-clang
            - x86_64-linux-clang
          filters: *tag_filter
      - blockchain:
          requires:
            - barretenberg-js
          filters: *tag_filter
      - halloumi:
          requires:
            - barretenberg-js
          filters: *tag_filter
      - falafel:
          requires:
            - blockchain
            - halloumi
          filters: *tag_filter
      - sdk:
          requires:
            - falafel
          filters: *tag_filter
      - hummus:
          requires:
            - sdk
      - wasabi:
          requires:
            - sdk
      - block-explorer:
          requires:
            - sdk
      - zk-money:
          requires:
            - sdk
          filters: *tag_filter
      - end-to-end:
          requires:
            - sdk
          filters: *tag_filter
      - e2e-payment:
          requires:
            - end-to-end
          filters: *tag_filter
      - e2e-account:
          requires:
            - end-to-end
          filters: *tag_filter
      - e2e-defi:
          requires:
            - end-to-end
          filters: *tag_filter
      - website
      - metrics
      - deploy:
          requires:
            - x86_64-linux-gcc
            - e2e-payment
            - e2e-account
            - e2e-defi
            - hummus
            - wasabi
            - block-explorer
            - website
            - zk-money
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - e2e-payment
            - e2e-account
            - e2e-defi
            - zk-money
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/

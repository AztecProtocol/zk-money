setup_env: &setup_env
  run:
    name: 'Setup environment'
    command: .circleci/setup_env

version: 2.1
jobs:
  toolchains:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'cmake'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.cmake; then
              build cmake:3.16.5 dockerfiles/Dockerfile.cmake
            fi
      - run:
          name: 'gcc'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.gcc; then
              build gcc:9 dockerfiles/Dockerfile.gcc
            fi
      - run:
          name: 'clang'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.clang; then
              build clang:9.0.0 dockerfiles/Dockerfile.clang
            fi

  x86_64-linux-gcc:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:x86_64-linux-gcc ./dockerfiles/Dockerfile.x86_64-linux-gcc

  x86_64-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:x86_64-linux-clang ./dockerfiles/Dockerfile.x86_64-linux-clang

  wasm-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:wasm-linux-clang ./dockerfiles/Dockerfile.wasm-linux-clang

  barretenberg-js:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: barretenberg.js
          command: build barretenberg.js:latest

  blockchain:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: blockchain
          command: build blockchain:latest

  falafel:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: falafel
          command: build falafel:latest

  sriracha:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: sriracha
          command: build sriracha:latest

  sdk:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: sdk
          command: build sdk:latest

  hummus:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: hummus
          command: build hummus:latest

  end-to-end:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: end-to-end
          command: |
            if check_rebuild; then
              sudo fallocate -l 4G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              build end-to-end:latest
              docker tag $ECR_URL/end-to-end:cache-$CIRCLE_SHA1-latest $ECR_DEPLOY_URL/end-to-end:latest
              docker-compose up --exit-code-from end-to-end
            fi

  deploy:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'barretenberg:x86_64-linux-gcc'
          working_directory: barretenberg
          command: deploy barretenberg:x86_64-linux-gcc
      - run:
          name: 'barretenberg:x86_64-linux-clang'
          working_directory: barretenberg
          command: deploy barretenberg:x86_64-linux-clang
      - run:
          name: 'barretenberg:wasm-linux-clang'
          working_directory: barretenberg
          command: deploy barretenberg:wasm-linux-clang
      - run:
          name: 'barretenberg.js'
          working_directory: barretenberg.js
          command: deploy barretenberg.js:latest
      - run:
          name: 'sdk'
          working_directory: sdk
          command: deploy sdk:latest
      - run:
          name: 'falafel'
          working_directory: falafel
          command: deploy falafel:latest
      - run:
          name: 'hummus'
          working_directory: hummus
          command: deploy hummus:latest

workflows:
  build:
    jobs:
      - toolchains
      - x86_64-linux-gcc:
          requires:
            - toolchains
      - x86_64-linux-clang:
          requires:
            - toolchains
      - wasm-linux-clang:
          requires:
            - toolchains
      - barretenberg-js:
          requires:
            - wasm-linux-clang
      - blockchain:
          requires:
            - barretenberg-js
      - falafel:
          requires:
            - x86_64-linux-clang
            - blockchain
      - sriracha:
          requires:
            - blockchain
      - sdk:
          requires:
            - barretenberg-js
      - hummus:
          requires:
            - sdk
      - end-to-end:
          requires:
            - falafel
            - sdk
      - deploy:
          requires:
            - x86_64-linux-gcc
            - end-to-end
            - hummus
          filters:
            branches:
              only: master

setup_env: &setup_env
  run:
    name: 'Setup environment'
    command: .circleci/setup_env << pipeline.parameters.rebuild >>

version: 2.1
parameters:
  rebuild:
    type: boolean
    default: false
jobs:
  x86_64-linux-gcc:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-x86_64-linux-gcc ./dockerfiles/Dockerfile.x86_64-linux-gcc

  x86_64-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-x86_64-linux-clang ./dockerfiles/Dockerfile.x86_64-linux-clang

  wasm-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg-wasm-linux-clang ./dockerfiles/Dockerfile.wasm-linux-clang

  barretenberg-js:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg.js
          command: build barretenberg.js

  blockchain:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: blockchain
          command: build blockchain

  halloumi:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: halloumi
          command: build halloumi

  falafel:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: falafel
          command: build falafel

  sriracha:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: sriracha
          command: build sriracha

  wasabi:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: wasabi
          command: build wasabi

  sdk:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: sdk
          command: build sdk

  hummus:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: hummus
          command: build hummus

  block-explorer:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: block-explorer
          command: build block-explorer

  documentation:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: documentation
          command: build documentation

  end-to-end:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: xlarge
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: end-to-end
          command: |
            if check_rebuild; then
              build end-to-end
              docker tag $ECR_URL/end-to-end:cache-$CIRCLE_SHA1 $ECR_DEPLOY_URL/end-to-end:latest
              docker-compose up --exit-code-from end-to-end
            fi

  zk-money:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: zk-money
          command: build zk-money

  website:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: website
          command: build website

  metrics:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build coinbase-exporter'
          working_directory: metrics/coinbase-exporter
          command: build coinbase-exporter
      - run:
          name: 'Build sidecar'
          working_directory: metrics/sidecar
          command: build metrics-sidecar
      - run:
          name: 'Build prometheus'
          working_directory: metrics/prometheus
          command: build prometheus
      - run:
          name: 'Build grafana'
          working_directory: metrics/grafana
          command: build grafana

  deploy:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'blockchain'
          working_directory: blockchain
          command: |
            deploy_ecr blockchain
            if changed '.*\.sol$' || changed .redeploy; then
              `docker run --env ESCAPE_BLOCK_LOWER=60 --env ESCAPE_BLOCK_UPPER=120 --env INFURA_API_KEY=$TF_VAR_INFURA_API_KEY --env PRIVATE_KEY=$TF_VAR_PRIVATE_KEY --env NETWORK=goerli 278380418400.dkr.ecr.eu-west-2.amazonaws.com/blockchain:latest`
              export TF_VAR_ROLLUP_CONTRACT_ADDRESS=$ROLLUP_CONTRACT_ADDRESS
              deploy_terraform
            fi
      - run:
          name: 'sdk'
          working_directory: sdk
          command: |
            deploy_ecr sdk
      - run:
          name: 'halloumi'
          working_directory: halloumi
          command: deploy halloumi
      - run:
          name: 'falafel'
          working_directory: falafel
          command: deploy falafel
      - run:
          name: 'sriracha'
          working_directory: sriracha
          command: |
            deploy sriracha
            deploy_dockerhub sriracha
      - run:
          name: 'wasabi'
          working_directory: wasabi
          command: |
            deploy wasabi
      - run:
          name: 'hummus'
          working_directory: hummus
          command: |
            deploy_ecr hummus
            deploy_s3 hummus
      - run:
          name: 'block-explorer'
          working_directory: block-explorer
          command: |
            deploy_ecr block-explorer
            deploy_s3 block-explorer
      - run:
          name: 'documentation'
          working_directory: documentation
          command: |
            deploy_ecr documentation
            deploy_s3 documentation
      - run:
          name: 'website'
          working_directory: website
          command: |
            deploy_ecr website
            deploy_s3 website
      - run:
          name: 'zk-money'
          working_directory: zk-money
          command: |
            deploy_ecr zk-money
            deploy_s3 zk-money
      - run:
          name: 'metrics'
          working_directory: metrics
          command: |
            cd coinbase-exporter && deploy coinbase-exporter && cd ..
            cd ecs-exporter && deploy_terraform && cd ..
            cd sidecar && deploy metrics-sidecar && cd ..
            cd prometheus && deploy prometheus && cd ..
            cd grafana && deploy grafana && cd ..

  deploy-prod:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'sdk'
          working_directory: sdk
          command: |
            deploy_ecr sdk
            deploy_npm sdk
      - run:
          name: 'halloumi'
          working_directory: halloumi
          command: deploy halloumi halloumi-mainnet ./terraform/mainnet
      - run:
          name: 'falafel'
          working_directory: falafel
          command: deploy falafel falafel-mainnet ./terraform/mainnet
      # - run:
      #     name: 'sriracha'
      #     working_directory: sriracha
      #     command: |
      #       deploy sriracha
      #       deploy_dockerhub sriracha
      # - run:
      #     name: 'block-explorer'
      #     working_directory: block-explorer
      #     command: |
      #       deploy block-explorer
      #       deploy_s3 block-explorer
      # - run:
      #     name: 'documentation'
      #     working_directory: documentation
      #     command: |
      #       deploy documentation
      #       deploy_s3 documentation
      - run:
          name: 'zk-money'
          working_directory: zk-money
          command: |
            deploy_ecr zk-money
            deploy_s3 zk-money ./terraform/mainnet

workflows:
  build:
    jobs:
      - x86_64-linux-gcc
      - x86_64-linux-clang
      - wasm-linux-clang
      - barretenberg-js:
          requires:
            - wasm-linux-clang
            - x86_64-linux-clang
      - blockchain:
          requires:
            - barretenberg-js
      - halloumi:
          requires:
            - barretenberg-js
      - falafel:
          requires:
            - blockchain
            - halloumi
      - sriracha:
          requires:
            - blockchain
      - sdk:
          requires:
            - falafel
            - sriracha
      - hummus:
          requires:
            - sdk
      - wasabi:
          requires:
            - sdk
      - block-explorer:
          requires:
            - sdk
      - zk-money:
          requires:
            - sdk
      - documentation:
          requires:
            - sdk
      - end-to-end:
          requires:
            - sdk
      - website
      - metrics
      - deploy:
          requires:
            - x86_64-linux-gcc
            - end-to-end
            - hummus
            - wasabi
            - block-explorer
            - documentation
            - website
            - zk-money
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - zk-money
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/

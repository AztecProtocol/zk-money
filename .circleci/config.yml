setup_env: &setup_env
  run:
    name: 'Setup environment'
    command: .circleci/setup_env

version: 2.1
jobs:
  toolchains:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'cmake'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.cmake; then
              build cmake:3.16.5 dockerfiles/Dockerfile.cmake
            fi
      - run:
          name: 'gcc'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.gcc; then
              build gcc:9 dockerfiles/Dockerfile.gcc
            fi
      - run:
          name: 'clang'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.clang; then
              build clang:9.0.0 dockerfiles/Dockerfile.clang
            fi

  x86_64-linux-gcc:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:x86_64-linux-gcc ./dockerfiles/Dockerfile.x86_64-linux-gcc

  x86_64-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:x86_64-linux-clang ./dockerfiles/Dockerfile.x86_64-linux-clang

  wasm-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:wasm-linux-clang ./dockerfiles/Dockerfile.wasm-linux-clang

  barretenberg-js:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: barretenberg.js
          command: build barretenberg.js:latest

  blockchain:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: blockchain
          command: build blockchain:latest

  falafel:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: falafel
          command: build falafel:latest

  sriracha:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: sriracha
          command: build sriracha:latest

  sdk:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: sdk
          command: |
            build sdk:latest
            if check_rebuild; then
              check_npm_version @aztec/sdk
            fi

  hummus:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: hummus
          command: build hummus:latest

  block-explorer:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: block-explorer
          command: build block-explorer:latest

  documentation:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: documentation
          command: build documentation:latest

  end-to-end:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: xlarge
    steps:
      - checkout
      - *setup_env
      - run:
          name: 'Build and test'
          working_directory: end-to-end
          command: |
            if check_rebuild; then
              sudo fallocate -l 8G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              build end-to-end:latest
              docker tag $ECR_URL/end-to-end:cache-$CIRCLE_SHA1-latest $ECR_DEPLOY_URL/end-to-end:latest
              docker-compose up --exit-code-from end-to-end
            fi

  website:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: website
          command: build website:latest

  metrics:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Build sidecar'
          working_directory: metrics/sidecar
          command: build metrics-sidecar:latest
      - run:
          name: 'Build prometheus'
          working_directory: metrics/prometheus
          command: build prometheus:latest
      - run:
          name: 'Build grafana'
          working_directory: metrics/grafana
          command: build grafana:latest

  deploy:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - checkout
      - *setup_env
      - setup_remote_docker
      - run:
          name: 'barretenberg:x86_64-linux-gcc'
          working_directory: barretenberg
          command: deploy barretenberg:x86_64-linux-gcc
      - run:
          name: 'barretenberg:x86_64-linux-clang'
          working_directory: barretenberg
          command: deploy barretenberg:x86_64-linux-clang
      - run:
          name: 'barretenberg:wasm-linux-clang'
          working_directory: barretenberg
          command: deploy barretenberg:wasm-linux-clang
      - run:
          name: 'barretenberg.js'
          working_directory: barretenberg.js
          command: deploy barretenberg.js:latest
      - run:
          name: 'blockchain'
          working_directory: blockchain
          command: |
            deploy_ecr blockchain:latest
            if changed '.*\.sol$'; then
              `docker run --env INFURA_API_KEY=$TF_VAR_INFURA_API_KEY --env PRIVATE_KEY=$TF_VAR_PRIVATE_KEY --env NETWORK=goerli 278380418400.dkr.ecr.eu-west-2.amazonaws.com/blockchain:latest`
              export TF_VAR_ROLLUP_CONTRACT_ADDRESS=$ROLLUP_CONTRACT_ADDRESS
              deploy_terraform
            fi
      - run:
          name: 'sdk'
          working_directory: sdk
          command: |
            deploy sdk:latest
            deploy_npm sdk:latest
      - run:
          name: 'falafel'
          working_directory: falafel
          command: deploy falafel:latest
      - run:
          name: 'sriracha'
          working_directory: sriracha
          command: |
            deploy sriracha:latest
            deploy_dockerhub sriracha:latest
      - run:
          name: 'hummus'
          working_directory: hummus
          command: |
            deploy hummus:latest
            deploy_s3 hummus:latest
      - run:
          name: 'block-explorer'
          working_directory: block-explorer
          command: |
            deploy block-explorer:latest
            deploy_s3 block-explorer:latest
      - run:
          name: 'documentation'
          working_directory: documentation
          command: |
            deploy documentation:latest
            deploy_s3 documentation:latest
      - run:
          name: 'website'
          working_directory: website
          command: |
            deploy website:latest
            deploy_s3 website:latest
      - run:
          name: 'metrics'
          working_directory: metrics
          command: |
            cd sidecar && deploy metrics-sidecar:latest && cd ..
            cd prometheus && deploy prometheus:latest && cd ..
            cd grafana && deploy grafana:latest && cd ..

workflows:
  build:
    jobs:
      - toolchains
      - x86_64-linux-gcc:
          requires:
            - toolchains
      - x86_64-linux-clang:
          requires:
            - toolchains
      - wasm-linux-clang:
          requires:
            - toolchains
      - barretenberg-js:
          requires:
            - wasm-linux-clang
            - x86_64-linux-clang
      - blockchain:
          requires:
            - barretenberg-js
      - falafel:
          requires:
            - blockchain
      - sriracha:
          requires:
            - blockchain
      - sdk:
          requires:
            - falafel
            - sriracha
      - hummus:
          requires:
            - sdk
      - block-explorer:
          requires:
            - sdk
      - documentation:
          requires:
            - sdk
      - end-to-end:
          requires:
            - sdk
      - website
      - metrics
      - deploy:
          requires:
            - x86_64-linux-gcc
            - end-to-end
            - hummus
            - block-explorer
            - documentation
            - website
          filters:
            branches:
              only: master

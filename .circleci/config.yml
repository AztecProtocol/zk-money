setup_env: &setup_env
  run:
    name: 'Setup environment'
    command: |
      [ -n "$CIRCLE_TOKEN" ] || (echo "No CIRCLE_TOKEN available." && exit 1)
      LAST_SUCCESSFUL_BUILD_URL="https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/master?filter=successful&limit=30"
      echo export LAST_SUCCESSFUL_COMMIT=`curl -Ss -u "$CIRCLE_TOKEN:" $LAST_SUCCESSFUL_BUILD_URL | jq -r '[.[] | select(.build_parameters.CIRCLE_JOB != "toolchains")][0].vcs_revision'` >> $BASH_ENV
      echo export PATH=$PATH:$(pwd)/.circleci >> $BASH_ENV
      echo export AWS_DEFAULT_REGION=eu-west-2 >> $BASH_ENV
      echo export ECR_REGION=us-east-2 >> $BASH_ENV
      echo export ECR_URL=278380418400.dkr.ecr.us-east-2.amazonaws.com >> $BASH_ENV
      echo export ECR_DEPLOY_REGION=eu-west-2 >> $BASH_ENV
      echo export ECR_DEPLOY_URL=278380418400.dkr.ecr.eu-west-2.amazonaws.com >> $BASH_ENV
      cat $BASH_ENV

version: 2.1
jobs:
  toolchains:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'cmake'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.cmake; then
              build cmake:3.16.5 dockerfiles/Dockerfile.cmake
            fi
      - run:
          name: 'gcc'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.gcc; then
              build gcc:9 dockerfiles/Dockerfile.gcc
            fi
      - run:
          name: 'clang'
          working_directory: barretenberg
          command: |
            if changed dockerfiles/Dockerfile.clang; then
              build clang:9.0.0 dockerfiles/Dockerfile.clang
            fi

  x86_64-linux-gcc:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:x86_64-linux-gcc ./dockerfiles/Dockerfile.x86_64-linux-gcc

  x86_64-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:x86_64-linux-clang ./dockerfiles/Dockerfile.x86_64-linux-clang

  wasm-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: build barretenberg:wasm-linux-clang ./dockerfiles/Dockerfile.wasm-linux-clang

  barretenberg-js:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: barretenberg.js
          command: build barretenberg.js:latest

  falafel:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Build and test'
          working_directory: falafel
          command: build falafel:latest

  hummus:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build and test'
          working_directory: hummus
          command: build hummus:latest

  deploy:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - setup_remote_docker
      - run:
          name: 'barretenberg:x86_64-linux-gcc'
          working_directory: barretenberg
          command: deploy barretenberg:x86_64-linux-gcc
      - run:
          name: 'barretenberg:x86_64-linux-clang'
          working_directory: barretenberg
          command: deploy barretenberg:x86_64-linux-clang
      - run:
          name: 'barretenberg:wasm-linux-clang'
          working_directory: barretenberg
          command: deploy barretenberg:wasm-linux-clang
      - run:
          name: 'barretenberg.js'
          working_directory: barretenberg.js
          command: deploy barretenberg.js:latest
      - run:
          name: 'falafel'
          working_directory: falafel
          command: deploy falafel:latest
      - run:
          name: 'hummus'
          working_directory: hummus
          command: deploy hummus:latest

workflows:
  build:
    jobs:
      - toolchains
      - x86_64-linux-gcc:
          requires:
            - toolchains
      - x86_64-linux-clang:
          requires:
            - toolchains
      - wasm-linux-clang:
          requires:
            - toolchains
      - barretenberg-js:
          requires:
            - wasm-linux-clang
      - falafel:
          requires:
            - barretenberg-js
            - x86_64-linux-clang
      - hummus:
          requires:
            - barretenberg-js
      - deploy:
          requires:
            - x86_64-linux-gcc
            - x86_64-linux-clang
            - falafel
            - hummus
          filters:
            branches:
              only: master


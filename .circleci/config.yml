setup_env: &setup_env
  run:
    name: 'Setup environment variables'
    command: |
      [ -n "$CIRCLE_TOKEN" ] || (echo "No CIRCLE_TOKEN available." && exit 1)
      LAST_SUCCESSFUL_BUILD_URL="https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/master?filter=successful&limit=30"
      echo export LAST_SUCCESSFUL_COMMIT=`curl -Ss -u "$CIRCLE_TOKEN:" $LAST_SUCCESSFUL_BUILD_URL | jq -r '[.[] | select(.build_parameters.CIRCLE_JOB != "toolchains")][0].vcs_revision'` >> $BASH_ENV
      cat $BASH_ENV

check_for_rebuild: &check_for_rebuild |
    if ! git diff --name-only ${LAST_SUCCESSFUL_COMMIT} ${CIRCLE_SHA1} | grep -q -f .rebuild_patterns; then
      echo No changes matching .rebuild_patterns since last successful master commit.
      circleci step halt
    fi

version: 2.1
jobs:
  toolchains:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Docker login'
          working_directory: barretenberg
          command: |
            docker login -u aztecprotocolci -p "${DOCKERHUB_PASSWORD}"
      - run:
          name: 'cmake'
          working_directory: barretenberg
          command: |
            if git diff --name-only ${LAST_SUCCESSFUL_COMMIT} ${CIRCLE_SHA1} | grep -q dockerfiles/Dockerfile.cmake; then
              docker-compose build cmake
              docker push aztecprotocol/cmake:3.16.5
            fi
      - run:
          name: 'gcc'
          working_directory: barretenberg
          command: |
            if git diff --name-only ${LAST_SUCCESSFUL_COMMIT} ${CIRCLE_SHA1} | grep -q dockerfiles/Dockerfile.gcc; then
              docker-compose build gcc
              docker push aztecprotocol/gcc:9
            fi
      - run:
          name: 'clang'
          working_directory: barretenberg
          command: |
            if git diff --name-only ${LAST_SUCCESSFUL_COMMIT} ${CIRCLE_SHA1} | grep -q dockerfiles/Dockerfile.clang; then
              docker-compose build clang
              docker push aztecprotocol/clang:9.0.0
            fi

  x86_64-linux-gcc:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Check for rebuild'
          working_directory: barretenberg
          command: *check_for_rebuild
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: |
            docker pull aztecprotocol/gcc:9
            docker-compose build x86_64-linux-gcc

  x86_64-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Check for rebuild'
          working_directory: barretenberg
          command: *check_for_rebuild
      - run:
          name: 'Build'
          working_directory: barretenberg
          command: |
            docker pull aztecprotocol/clang:9.0.0
            docker-compose build x86_64-linux-clang
      - run:
          name: 'Test'
          working_directory: barretenberg
          command: |
            docker-compose run x86_64-linux-clang
      - run:
          name: 'Push'
          working_directory: barretenberg
          command: |
            docker login -u aztecprotocolci -p "${DOCKERHUB_PASSWORD}"
            docker push aztecprotocol/barretenberg:x86_64-linux-clang

  wasm-linux-clang:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    resource_class: large
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Check for rebuild'
          working_directory: barretenberg
          command: *check_for_rebuild
      - run:
          name: 'Build and test'
          working_directory: barretenberg
          command: |
            docker-compose build --pull wasm-linux-clang
      - run:
          name: 'Push'
          working_directory: barretenberg
          command: |
            docker login -u aztecprotocolci -p "${DOCKERHUB_PASSWORD}"
            docker push aztecprotocol/barretenberg:wasm-linux-clang

  barretenberg-js:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Check for rebuild'
          working_directory: barretenberg.js
          command: *check_for_rebuild
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: 'Build and test'
          working_directory: barretenberg.js
          command: |
            docker build --pull -t aztecprotocol/barretenberg.js:latest .
      - run:
          name: 'Push'
          working_directory: barretenberg.js
          command: |
            docker login -u aztecprotocolci -p "${DOCKERHUB_PASSWORD}"
            docker push aztecprotocol/barretenberg.js:latest

  falafel:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Check for rebuild'
          working_directory: falafel
          command: *check_for_rebuild
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: 'Build and test'
          working_directory: falafel
          command: |
            docker build --pull -t aztecprotocol/falafel:latest .
      - run:
          name: 'Push'
          working_directory: falafel
          command: |
            docker login -u aztecprotocolci -p "${DOCKERHUB_PASSWORD}"
            docker push aztecprotocol/falafel:latest

  hummus:
    docker:
      - image: aztecprotocol/build-image
    steps:
      - *setup_env
      - checkout
      - run:
          name: 'Check for rebuild'
          working_directory: hummus
          command: *check_for_rebuild
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: 'Build and test'
          working_directory: hummus
          command: |
            docker build --pull -t aztecprotocol/hummus:latest .
      - run:
          name: 'Push'
          working_directory: hummus
          command: |
            docker login -u aztecprotocolci -p "${DOCKERHUB_PASSWORD}"
            docker push aztecprotocol/hummus:latest

workflows:
  build:
    jobs:
      - toolchains
      - x86_64-linux-gcc:
          requires:
            - toolchains
      - x86_64-linux-clang:
          requires:
            - toolchains
      - wasm-linux-clang:
          requires:
            - toolchains
      - barretenberg-js:
          requires:
            - wasm-linux-clang
      - falafel:
          requires:
            - barretenberg-js
      - hummus:
          requires:
            - barretenberg-js

